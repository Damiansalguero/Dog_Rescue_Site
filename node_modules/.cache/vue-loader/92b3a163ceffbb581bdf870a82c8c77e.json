{"remainingRequest":"/home/damian/spiced-finalproject/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/damian/spiced-finalproject/src/views/Connect.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/damian/spiced-finalproject/src/views/Connect.vue","mtime":1561725144849},{"path":"/home/damian/spiced-finalproject/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/damian/spiced-finalproject/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/damian/spiced-finalproject/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/damian/spiced-finalproject/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// @ is an alias to /src\nimport axios from \"@/axios\";\nimport Lost from \"@/components/Lost\";\nimport Found from \"@/components/Found\";\nimport { mapState } from \"vuex\";\n\nexport default {\n  name: \"Connect\",\n  components: { Lost, Found },\n  data: function() {\n    //       lat: 52.52000659999999\n    // lng: 13.404953999999975\n    return {\n      center: { lat: 52.52000659999999, lng: 13.404953999999975 },\n      markers: [],\n      places: [],\n      currentPlace: null,\n      lostAnimals: [],\n      foundAnimals: [],\n      myMapMarker: {},\n      form: {\n        species: \"\",\n        status: \"\",\n        chipped: \"\",\n        lastSeen: \"\",\n        location: \"\",\n        description: \"\",\n        name: \"\",\n        age: \"\",\n        gender: \"\",\n        breed: \"\",\n        file: null\n      }\n    };\n  },\n  mounted: function() {\n    this.geolocate();\n    var self = this;\n    axios.get(\"/get-animals\").then(function(resp) {\n      resp.data.forEach(item => {\n        item.location = JSON.parse(item.location);\n      });\n      const lostAnimals = resp.data.filter(animal => animal.status == \"lost\");\n      const foundAnimals = resp.data.filter(animal => animal.status == \"found\");\n      self.lostAnimals = lostAnimals;\n      self.foundAnimals = foundAnimals;\n    });\n  },\n  methods: {\n    setPlace(place) {\n      this.currentPlace = place;\n    },\n    addMarker() {\n      if (this.currentPlace) {\n        const marker = {\n          lat: this.currentPlace.geometry.location.lat(),\n          lng: this.currentPlace.geometry.location.lng()\n        };\n        this.myMapMarker = { position: marker };\n        this.markers.push({ position: marker });\n        this.places.push(this.currentPlace);\n        this.center = marker;\n        this.currentPlace = null;\n      }\n    },\n    geolocate: function() {\n      navigator.geolocation.getCurrentPosition(position => {\n        this.center = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n      });\n    },\n    handleSearch(event) {\n      console.log(\"handleSearch\", event);\n    },\n    handleFileChange: function(e) {\n      this.form.file = e.target.files[0];\n    },\n    sendForm: function() {\n      var stringMarker = JSON.stringify(this.myMapMarker);\n      console.log(stringMarker);\n      var formData = new FormData();\n      formData.append(\"name\", this.form.name);\n      formData.append(\"status\", this.form.status);\n      formData.append(\"species\", this.form.species);\n      formData.append(\"chipped\", this.form.chipped);\n      formData.append(\"gender\", this.form.gender);\n      formData.append(\"breed\", this.form.breed);\n      formData.append(\"location\", stringMarker);\n      formData.append(\"description\", this.form.description);\n      formData.append(\"lastSeen\", this.form.lastSeen);\n      formData.append(\"age\", this.form.age);\n      formData.append(\"file\", this.form.file);\n      // if you log formData and get an {}, that's ok\n      var self = this;\n      axios.post(\"/upload-connect\", formData).then(function(resp) {\n        //$bvModal.hide(\"uploadLostFound\");\n        console.log(\"animal from upload response\", resp.data);\n        if (resp.data.status == \"lost\") {\n          self.lostAnimals.push(resp.data);\n        } else {\n          self.foundAnimals.push(resp.data);\n        }\n      });\n    }\n  },\n  computed: mapState([\"userInfo\", \"verified\"])\n};\n",{"version":3,"sources":["Connect.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+JA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Connect.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"connect\">\n    <div class=\"router-lost\">\n      <div class=\"links-lost\">\n        <router-link class=\"nav\" to=\"/connect/lost\">Lost</router-link> |\n        <router-link class=\"nav\" to=\"/connect/found\">Found</router-link>\n      </div>\n\n      <div id=\"lost-found-btn\">\n        <b-button\n          class=\"doggy-btn\"\n          v-if=\"userInfo.userId != null\"\n          id=\"show-btn\"\n          @click=\"$bvModal.show('uploadLostFound')\"\n        >\n          Upload Details\n        </b-button>\n      </div>\n      <div class=\"lost-box\">\n        <b-modal id=\"uploadLostFound\" hide-footer>\n          <template slot=\"modal-title\">\n            Lost & Found Uploader\n          </template>\n          <div class=\"d-block text-center\">\n            <h2>Please add a lost or found Pet</h2>\n            <form class=\"\">\n              <label for=\"spiecies\">Spiecies</label>\n              <input\n                type=\"text\"\n                name=\"spiecies\"\n                value=\"\"\n                placeholder=\"species\"\n                v-model=\"form.species\"\n              />\n              <fieldset>\n                <label for=\"status\">Status</label>\n                <input\n                  type=\"radio\"\n                  id=\"lost\"\n                  name=\"status\"\n                  value=\"lost\"\n                  v-model=\"form.status\"\n                />\n                <label for=\"lost\">Lost</label>\n                <input\n                  type=\"radio\"\n                  id=\"found\"\n                  name=\"status\"\n                  value=\"found\"\n                  v-model=\"form.status\"\n                />\n                <label for=\"found\">Found</label>\n              </fieldset>\n              <label for=\"chipped\">Chipped</label>\n              <fieldset>\n                <input\n                  type=\"radio\"\n                  id=\"chipped-yes\"\n                  name=\"chipped\"\n                  value=\"yes\"\n                  v-model=\"form.chipped\"\n                />\n                <label for=\"chipped-yes\">Yes</label>\n                <input\n                  type=\"radio\"\n                  id=\"chipped-no\"\n                  name=\"chipped\"\n                  value=\"no\"\n                  v-model=\"form.chipped\"\n                />\n                <label for=\"found\">No</label>\n              </fieldset>\n              <label for=\"lastSeen\">Last Seen</label>\n              <input type=\"date\" name=\"\" value=\"\" v-model=\"form.lastSeen\" />\n\n              <label for=\"description\">Description</label>\n              <textarea\n                name=\"description\"\n                rows=\"2\"\n                cols=\"40\"\n                placeholder=\"description\"\n                v-model=\"form.description\"\n              ></textarea>\n              <label for=\"name\">Name</label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                value=\"\"\n                placeholder=\"name\"\n                v-model=\"form.name\"\n              />\n              <label for=\"gender\">Gender</label>\n              <input\n                type=\"text\"\n                name=\"gender\"\n                value=\"\"\n                placeholder=\"gender\"\n                v-model=\"form.gender\"\n              />\n              <label for=\"breed\">Breed</label>\n              <input\n                type=\"text\"\n                name=\"breed\"\n                value=\"\"\n                placeholder=\"breed\"\n                v-model=\"form.breed\"\n              />\n              <label for=\"age\">Age</label>\n              <input\n                type=\"text\"\n                name=\"age\"\n                value=\"\"\n                placeholder=\"age\"\n                v-model=\"form.age\"\n              />\n              <input\n                id=\"select-img\"\n                type=\"file\"\n                name=\"file\"\n                accept=\"image/*\"\n                @change=\"handleFileChange\"\n                class=\"inputfile\"\n              />\n            </form>\n            <label>\n              <gmap-autocomplete @place_changed=\"setPlace\"> </gmap-autocomplete>\n              <button @click=\"addMarker\">Add</button>\n            </label>\n            <gmap-map\n              :center=\"center\"\n              :zoom=\"12\"\n              style=\"width:100%;  height: 400px;\"\n            >\n              <gmap-marker\n                :key=\"index\"\n                v-for=\"(m, index) in markers\"\n                :position=\"m.position\"\n                @click=\"center = m.position\"\n              ></gmap-marker>\n            </gmap-map>\n          </div>\n          <b-button class=\"mt-3\" block v-on:click.prevent=\"sendForm\"\n            >Upload</b-button\n          >\n        </b-modal>\n      </div>\n      <Lost\n        :lostAnimals=\"lostAnimals\"\n        v-if=\"this.$route.path == '/connect/lost'\"\n      />\n      <Found\n        :foundAnimals=\"foundAnimals\"\n        v-if=\"this.$route.path == '/connect/found'\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport axios from \"@/axios\";\nimport Lost from \"@/components/Lost\";\nimport Found from \"@/components/Found\";\nimport { mapState } from \"vuex\";\n\nexport default {\n  name: \"Connect\",\n  components: { Lost, Found },\n  data: function() {\n    //       lat: 52.52000659999999\n    // lng: 13.404953999999975\n    return {\n      center: { lat: 52.52000659999999, lng: 13.404953999999975 },\n      markers: [],\n      places: [],\n      currentPlace: null,\n      lostAnimals: [],\n      foundAnimals: [],\n      myMapMarker: {},\n      form: {\n        species: \"\",\n        status: \"\",\n        chipped: \"\",\n        lastSeen: \"\",\n        location: \"\",\n        description: \"\",\n        name: \"\",\n        age: \"\",\n        gender: \"\",\n        breed: \"\",\n        file: null\n      }\n    };\n  },\n  mounted: function() {\n    this.geolocate();\n    var self = this;\n    axios.get(\"/get-animals\").then(function(resp) {\n      resp.data.forEach(item => {\n        item.location = JSON.parse(item.location);\n      });\n      const lostAnimals = resp.data.filter(animal => animal.status == \"lost\");\n      const foundAnimals = resp.data.filter(animal => animal.status == \"found\");\n      self.lostAnimals = lostAnimals;\n      self.foundAnimals = foundAnimals;\n    });\n  },\n  methods: {\n    setPlace(place) {\n      this.currentPlace = place;\n    },\n    addMarker() {\n      if (this.currentPlace) {\n        const marker = {\n          lat: this.currentPlace.geometry.location.lat(),\n          lng: this.currentPlace.geometry.location.lng()\n        };\n        this.myMapMarker = { position: marker };\n        this.markers.push({ position: marker });\n        this.places.push(this.currentPlace);\n        this.center = marker;\n        this.currentPlace = null;\n      }\n    },\n    geolocate: function() {\n      navigator.geolocation.getCurrentPosition(position => {\n        this.center = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n      });\n    },\n    handleSearch(event) {\n      console.log(\"handleSearch\", event);\n    },\n    handleFileChange: function(e) {\n      this.form.file = e.target.files[0];\n    },\n    sendForm: function() {\n      var stringMarker = JSON.stringify(this.myMapMarker);\n      console.log(stringMarker);\n      var formData = new FormData();\n      formData.append(\"name\", this.form.name);\n      formData.append(\"status\", this.form.status);\n      formData.append(\"species\", this.form.species);\n      formData.append(\"chipped\", this.form.chipped);\n      formData.append(\"gender\", this.form.gender);\n      formData.append(\"breed\", this.form.breed);\n      formData.append(\"location\", stringMarker);\n      formData.append(\"description\", this.form.description);\n      formData.append(\"lastSeen\", this.form.lastSeen);\n      formData.append(\"age\", this.form.age);\n      formData.append(\"file\", this.form.file);\n      // if you log formData and get an {}, that's ok\n      var self = this;\n      axios.post(\"/upload-connect\", formData).then(function(resp) {\n        //$bvModal.hide(\"uploadLostFound\");\n        console.log(\"animal from upload response\", resp.data);\n        if (resp.data.status == \"lost\") {\n          self.lostAnimals.push(resp.data);\n        } else {\n          self.foundAnimals.push(resp.data);\n        }\n      });\n    }\n  },\n  computed: mapState([\"userInfo\", \"verified\"])\n};\n</script>\n\n<style src=\"../../public/style.connect.css\" scoped></style>\n"]}]}