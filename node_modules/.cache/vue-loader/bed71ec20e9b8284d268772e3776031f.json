{"remainingRequest":"/home/damian/spiced-finalproject/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/damian/spiced-finalproject/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/damian/spiced-finalproject/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/damian/spiced-finalproject/src/views/Connect.vue?vue&type=template&id=167d6ac0&","dependencies":[{"path":"/home/damian/spiced-finalproject/src/views/Connect.vue","mtime":1561652221679},{"path":"/home/damian/spiced-finalproject/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/damian/spiced-finalproject/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/damian/spiced-finalproject/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/damian/spiced-finalproject/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"lost-box\" },\n    [\n      _c(\n        \"div\",\n        [\n          _c(\n            \"router-link\",\n            { staticClass: \"nav\", attrs: { to: \"/connect/lost\" } },\n            [_vm._v(\"Lost\")]\n          ),\n          _vm._v(\" |\\n    \"),\n          _c(\n            \"router-link\",\n            { staticClass: \"nav\", attrs: { to: \"/connect/found\" } },\n            [_vm._v(\"Found\")]\n          ),\n          _c(\n            \"button\",\n            {\n              attrs: { id: \"show-btn\" },\n              on: {\n                click: function($event) {\n                  return _vm.$bvModal.show(\"uploadLostFound\")\n                }\n              }\n            },\n            [_vm._v(\"\\n      Upload\\n    \")]\n          ),\n          _c(\n            \"b-modal\",\n            { attrs: { id: \"uploadLostFound\", \"hide-footer\": \"\" } },\n            [\n              _c(\"template\", { slot: \"modal-title\" }, [\n                _vm._v(\"\\n        Lost & Found Uploader\\n      \")\n              ]),\n              _c(\"div\", { staticClass: \"d-block text-center\" }, [\n                _c(\"h2\", [_vm._v(\"Please add a lost or found Pet\")]),\n                _c(\"form\", {}, [\n                  _c(\"label\", { attrs: { for: \"spiecies\" } }, [\n                    _vm._v(\"Spiecies\")\n                  ]),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.form.species,\n                        expression: \"form.species\"\n                      }\n                    ],\n                    attrs: {\n                      type: \"text\",\n                      name: \"spiecies\",\n                      value: \"\",\n                      placeholder: \"species\"\n                    },\n                    domProps: { value: _vm.form.species },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(_vm.form, \"species\", $event.target.value)\n                      }\n                    }\n                  }),\n                  _c(\"fieldset\", [\n                    _c(\"label\", { attrs: { for: \"status\" } }, [\n                      _vm._v(\"Status\")\n                    ]),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.form.status,\n                          expression: \"form.status\"\n                        }\n                      ],\n                      attrs: {\n                        type: \"radio\",\n                        id: \"lost\",\n                        name: \"status\",\n                        value: \"lost\"\n                      },\n                      domProps: { checked: _vm._q(_vm.form.status, \"lost\") },\n                      on: {\n                        change: function($event) {\n                          return _vm.$set(_vm.form, \"status\", \"lost\")\n                        }\n                      }\n                    }),\n                    _c(\"label\", { attrs: { for: \"lost\" } }, [_vm._v(\"Lost\")]),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.form.status,\n                          expression: \"form.status\"\n                        }\n                      ],\n                      attrs: {\n                        type: \"radio\",\n                        id: \"found\",\n                        name: \"status\",\n                        value: \"found\"\n                      },\n                      domProps: { checked: _vm._q(_vm.form.status, \"found\") },\n                      on: {\n                        change: function($event) {\n                          return _vm.$set(_vm.form, \"status\", \"found\")\n                        }\n                      }\n                    }),\n                    _c(\"label\", { attrs: { for: \"found\" } }, [_vm._v(\"Found\")])\n                  ]),\n                  _c(\"label\", { attrs: { for: \"chipped\" } }, [\n                    _vm._v(\"Chipped\")\n                  ]),\n                  _c(\"fieldset\", [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.form.chipped,\n                          expression: \"form.chipped\"\n                        }\n                      ],\n                      attrs: {\n                        type: \"radio\",\n                        id: \"chipped-yes\",\n                        name: \"chipped\",\n                        value: \"yes\"\n                      },\n                      domProps: { checked: _vm._q(_vm.form.chipped, \"yes\") },\n                      on: {\n                        change: function($event) {\n                          return _vm.$set(_vm.form, \"chipped\", \"yes\")\n                        }\n                      }\n                    }),\n                    _c(\"label\", { attrs: { for: \"chipped-yes\" } }, [\n                      _vm._v(\"Yes\")\n                    ]),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.form.chipped,\n                          expression: \"form.chipped\"\n                        }\n                      ],\n                      attrs: {\n                        type: \"radio\",\n                        id: \"chipped-no\",\n                        name: \"chipped\",\n                        value: \"no\"\n                      },\n                      domProps: { checked: _vm._q(_vm.form.chipped, \"no\") },\n                      on: {\n                        change: function($event) {\n                          return _vm.$set(_vm.form, \"chipped\", \"no\")\n                        }\n                      }\n                    }),\n                    _c(\"label\", { attrs: { for: \"found\" } }, [_vm._v(\"No\")])\n                  ]),\n                  _c(\"label\", { attrs: { for: \"lastSeen\" } }, [\n                    _vm._v(\"Last Seen\")\n                  ]),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.form.lastSeen,\n                        expression: \"form.lastSeen\"\n                      }\n                    ],\n                    attrs: { type: \"date\", name: \"\", value: \"\" },\n                    domProps: { value: _vm.form.lastSeen },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(_vm.form, \"lastSeen\", $event.target.value)\n                      }\n                    }\n                  }),\n                  _c(\"label\", { attrs: { for: \"location\" } }, [\n                    _vm._v(\"Location\")\n                  ]),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.form.location,\n                        expression: \"form.location\"\n                      }\n                    ],\n                    attrs: {\n                      type: \"text\",\n                      name: \"\",\n                      value: \"\",\n                      placeholder: \"last known location\"\n                    },\n                    domProps: { value: _vm.form.location },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(_vm.form, \"location\", $event.target.value)\n                      }\n                    }\n                  }),\n                  _c(\"label\", { attrs: { for: \"description\" } }, [\n                    _vm._v(\"Description\")\n                  ]),\n                  _c(\"textarea\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.form.description,\n                        expression: \"form.description\"\n                      }\n                    ],\n                    attrs: {\n                      name: \"description\",\n                      rows: \"2\",\n                      cols: \"40\",\n                      placeholder: \"description\"\n                    },\n                    domProps: { value: _vm.form.description },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(_vm.form, \"description\", $event.target.value)\n                      }\n                    }\n                  }),\n                  _c(\"label\", { attrs: { for: \"name\" } }, [_vm._v(\"Name\")]),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.form.name,\n                        expression: \"form.name\"\n                      }\n                    ],\n                    attrs: {\n                      type: \"text\",\n                      name: \"name\",\n                      value: \"\",\n                      placeholder: \"name\"\n                    },\n                    domProps: { value: _vm.form.name },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(_vm.form, \"name\", $event.target.value)\n                      }\n                    }\n                  }),\n                  _c(\"label\", { attrs: { for: \"gender\" } }, [_vm._v(\"Gender\")]),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.form.gender,\n                        expression: \"form.gender\"\n                      }\n                    ],\n                    attrs: {\n                      type: \"text\",\n                      name: \"gender\",\n                      value: \"\",\n                      placeholder: \"gender\"\n                    },\n                    domProps: { value: _vm.form.gender },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(_vm.form, \"gender\", $event.target.value)\n                      }\n                    }\n                  }),\n                  _c(\"label\", { attrs: { for: \"breed\" } }, [_vm._v(\"Breed\")]),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.form.breed,\n                        expression: \"form.breed\"\n                      }\n                    ],\n                    attrs: {\n                      type: \"text\",\n                      name: \"breed\",\n                      value: \"\",\n                      placeholder: \"breed\"\n                    },\n                    domProps: { value: _vm.form.breed },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(_vm.form, \"breed\", $event.target.value)\n                      }\n                    }\n                  }),\n                  _c(\"label\", { attrs: { for: \"age\" } }, [_vm._v(\"Age\")]),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.form.age,\n                        expression: \"form.age\"\n                      }\n                    ],\n                    attrs: {\n                      type: \"text\",\n                      name: \"age\",\n                      value: \"\",\n                      placeholder: \"age\"\n                    },\n                    domProps: { value: _vm.form.age },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(_vm.form, \"age\", $event.target.value)\n                      }\n                    }\n                  }),\n                  _c(\"input\", {\n                    staticClass: \"inputfile\",\n                    attrs: {\n                      id: \"select-img\",\n                      type: \"file\",\n                      name: \"file\",\n                      accept: \"image/*\"\n                    },\n                    on: { change: _vm.handleFileChange }\n                  })\n                ])\n              ]),\n              _c(\n                \"b-button\",\n                {\n                  staticClass: \"mt-3\",\n                  attrs: { block: \"\" },\n                  on: {\n                    click: function($event) {\n                      $event.preventDefault()\n                      return _vm.sendForm($event)\n                    }\n                  }\n                },\n                [_vm._v(\"Upload\")]\n              )\n            ],\n            2\n          )\n        ],\n        1\n      ),\n      this.$route.path == \"/connect/lost\"\n        ? _c(\"Lost\", { attrs: { lostAnimals: _vm.lostAnimals } })\n        : _vm._e(),\n      this.$route.path == \"/connect/found\"\n        ? _c(\"Found\", { attrs: { foundAnimals: _vm.foundAnimals } })\n        : _vm._e()\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}