{"remainingRequest":"/home/damian/spiced-finalproject/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/damian/spiced-finalproject/src/components/auth/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/damian/spiced-finalproject/src/components/auth/Login.vue","mtime":1561730208256},{"path":"/home/damian/spiced-finalproject/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/damian/spiced-finalproject/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/damian/spiced-finalproject/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/damian/spiced-finalproject/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Reset from \"@/components/auth/Reset.vue\";\nimport axios from \"@/axios\";\n\nexport default {\n  name: \"Login\",\n  components: {\n    Reset\n  },\n  props: {},\n  data: function() {\n    return {\n      error: null,\n      reset: false,\n      loginForm: {\n        email: \"\",\n        password: \"\"\n      }\n    };\n  },\n  mounted: function() {},\n  methods: {\n    resetForm() {\n      if (this.reset == false) {\n        this.reset = true;\n      } else {\n        this.reset = false;\n      }\n      console.log(this.reset);\n    },\n    sendLogin: function() {\n      var self = this;\n      axios\n        .post(\"/sendLogin\", this.loginForm)\n        .then(function(resp) {\n          if (resp.data.success) {\n            self.$store.dispatch(\"loadUserInfo\");\n            self.$router.push(\"/\");\n          } else {\n            self.error = resp.data.error;\n          }\n        })\n        .catch(err => console.log(err));\n    }\n  }\n};\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components/auth","sourcesContent":["<template>\n  <div class=\"hello\" id=\"log\" v-if=\"reset === false\">\n    <div v-if=\"error\">{{ error }}</div>\n    <form id=\"login-form\" v-on:submit.prevent=\"sendLogin\">\n      <input\n        class=\"input-login\"\n        type=\"email\"\n        name=\"email\"\n        required\n        placeholder=\"Email\"\n        v-model=\"loginForm.email\"\n      />\n      <input\n        class=\"input-login\"\n        type=\"password\"\n        name=\"password\"\n        required\n        placeholder=\"Password\"\n        v-model=\"loginForm.password\"\n      />\n      <b-button id=\"btn-sign-two\" type=\"submit\">Sign In</b-button>\n    </form>\n    <b-button id=\"btn-sign\" v-on:click.prevent=\"$emit('swap-authForm')\"\n      >Sign Up?</b-button\n    >\n\n    <b-button id=\"btn-sign\" v-on:click.prevent=\"resetForm()\"\n      >Forgot your password?</b-button\n    >\n  </div>\n  <div id=\"reset-form\" v-else-if=\"reset === true\">\n    <Reset @swap-loginForm=\"resetForm\" />\n  </div>\n</template>\n\n<script>\nimport Reset from \"@/components/auth/Reset.vue\";\nimport axios from \"@/axios\";\n\nexport default {\n  name: \"Login\",\n  components: {\n    Reset\n  },\n  props: {},\n  data: function() {\n    return {\n      error: null,\n      reset: false,\n      loginForm: {\n        email: \"\",\n        password: \"\"\n      }\n    };\n  },\n  mounted: function() {},\n  methods: {\n    resetForm() {\n      if (this.reset == false) {\n        this.reset = true;\n      } else {\n        this.reset = false;\n      }\n      console.log(this.reset);\n    },\n    sendLogin: function() {\n      var self = this;\n      axios\n        .post(\"/sendLogin\", this.loginForm)\n        .then(function(resp) {\n          if (resp.data.success) {\n            self.$store.dispatch(\"loadUserInfo\");\n            self.$router.push(\"/\");\n          } else {\n            self.error = resp.data.error;\n          }\n        })\n        .catch(err => console.log(err));\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style src=\"../../../public/style.login.css\" scoped></style>\n"]}]}