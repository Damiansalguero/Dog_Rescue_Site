{"remainingRequest":"/home/damian/spiced-finalproject/node_modules/babel-loader/lib/index.js!/home/damian/spiced-finalproject/node_modules/eslint-loader/index.js??ref--13-0!/home/damian/spiced-finalproject/src/store.js","dependencies":[{"path":"/home/damian/spiced-finalproject/src/store.js","mtime":1561647807628},{"path":"/home/damian/spiced-finalproject/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/damian/spiced-finalproject/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/damian/spiced-finalproject/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/damian/spiced-finalproject/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nVue.use(Vuex);\nimport axios from \"@/axios\";\nexport default new Vuex.Store({\n  state: {\n    verified: false,\n    userInfo: {}\n  },\n  mutations: {\n    disableVerfify: function disableVerfify(state) {\n      state.verified = false;\n    },\n    SET_USERINFO: function SET_USERINFO(state, userInfo) {\n      state.userInfo = userInfo;\n    },\n    SET_VERIFICATION: function SET_VERIFICATION(state, verified) {\n      state.verified = verified;\n    }\n  },\n  actions: {\n    loadUserInfo: function loadUserInfo(_ref) {\n      var commit = _ref.commit;\n      axios.get(\"/getUserData\").then(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee(resp) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (resp.data.verified) {\n                    console.log(\"verified beeing set\", resp.data.verified);\n                    commit(\"SET_VERIFICATION\", resp.data.verified);\n                  }\n\n                  commit(\"SET_USERINFO\", resp.data.userInfo);\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    }\n  },\n  getters: {}\n});",{"version":3,"sources":["/home/damian/spiced-finalproject/src/store.js"],"names":["Vue","Vuex","use","axios","Store","state","verified","userInfo","mutations","disableVerfify","SET_USERINFO","SET_VERIFICATION","actions","loadUserInfo","commit","get","then","resp","data","console","log","getters"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AACA,OAAOE,KAAP,MAAkB,SAAlB;AAEA,eAAe,IAAIF,IAAI,CAACG,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,QAAQ,EAAE;AAFL,GADqB;AAK5BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,cADS,0BACMJ,KADN,EACa;AACpBA,MAAAA,KAAK,CAACC,QAAN,GAAiB,KAAjB;AACD,KAHQ;AAITI,IAAAA,YAJS,wBAIIL,KAJJ,EAIWE,QAJX,EAIqB;AAC5BF,MAAAA,KAAK,CAACE,QAAN,GAAiBA,QAAjB;AACD,KANQ;AAOTI,IAAAA,gBAPS,4BAOQN,KAPR,EAOeC,QAPf,EAOyB;AAChCD,MAAAA,KAAK,CAACC,QAAN,GAAiBA,QAAjB;AACD;AATQ,GALiB;AAgB5BM,EAAAA,OAAO,EAAE;AACPC,IAAAA,YADO,8BACkB;AAAA,UAAVC,MAAU,QAAVA,MAAU;AACvBX,MAAAA,KAAK,CAACY,GAAN,CAAU,cAAV,EAA0BC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA+B,iBAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAC7B,sBAAIA,IAAI,CAACC,IAAL,CAAUZ,QAAd,EAAwB;AACtBa,oBAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCH,IAAI,CAACC,IAAL,CAAUZ,QAA7C;AACAQ,oBAAAA,MAAM,CAAC,kBAAD,EAAqBG,IAAI,CAACC,IAAL,CAAUZ,QAA/B,CAAN;AACD;;AACDQ,kBAAAA,MAAM,CAAC,cAAD,EAAiBG,IAAI,CAACC,IAAL,CAAUX,QAA3B,CAAN;;AAL6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA/B;;AAAA;AAAA;AAAA;AAAA;AAOD;AATM,GAhBmB;AA4B5Bc,EAAAA,OAAO,EAAE;AA5BmB,CAAf,CAAf","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nVue.use(Vuex);\nimport axios from \"@/axios\";\n\nexport default new Vuex.Store({\n  state: {\n    verified: false,\n    userInfo: {}\n  },\n  mutations: {\n    disableVerfify(state) {\n      state.verified = false;\n    },\n    SET_USERINFO(state, userInfo) {\n      state.userInfo = userInfo;\n    },\n    SET_VERIFICATION(state, verified) {\n      state.verified = verified;\n    }\n  },\n  actions: {\n    loadUserInfo({ commit }) {\n      axios.get(\"/getUserData\").then(async function(resp) {\n        if (resp.data.verified) {\n          console.log(\"verified beeing set\", resp.data.verified);\n          commit(\"SET_VERIFICATION\", resp.data.verified);\n        }\n        commit(\"SET_USERINFO\", resp.data.userInfo);\n      });\n    }\n  },\n\n  getters: {}\n});\n"]}]}