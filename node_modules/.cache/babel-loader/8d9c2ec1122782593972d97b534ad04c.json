{"remainingRequest":"/home/damian/spiced-finalproject/node_modules/babel-loader/lib/index.js!/home/damian/spiced-finalproject/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/damian/spiced-finalproject/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/damian/spiced-finalproject/src/components/auth/ResetPass.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/damian/spiced-finalproject/src/components/auth/ResetPass.vue","mtime":1561465695528},{"path":"/home/damian/spiced-finalproject/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/damian/spiced-finalproject/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/damian/spiced-finalproject/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/damian/spiced-finalproject/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"@/axios\";\nexport default {\n  name: \"ResetPass\",\n  props: {},\n  data: function data() {\n    return {\n      error: null,\n      resetSuccess: false,\n      resetForm: {\n        password: null,\n        password2: null,\n        email: this.$route.query.email,\n        hash: this.$route.query.hash,\n        iv: this.$route.query.iv\n      }\n    };\n  },\n  mounted: function mounted() {},\n  methods: {\n    resetPass: function resetPass() {\n      if (this.resetForm.password != this.resetForm.password2) {\n        this.error = \"Passwords to not match\";\n      } else {\n        var self = this;\n        axios.post(\"/resetPass\", this.resetForm).then(function (resp) {\n          if (resp.data.success) {\n            self.resetSuccess = true;\n          } else {\n            self.error = resp.data.error;\n          }\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    }\n  },\n  updated: function updated() {\n    this.$nextTick(function () {\n      var _this = this;\n\n      if (this.resetSuccess) {\n        setTimeout(function () {\n          return _this.$router.push(\"/\");\n        }, 4000);\n      }\n    });\n  }\n};",{"version":3,"sources":["ResetPass.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAyBA,OAAA,KAAA,MAAA,SAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,KAAA,EAAA,EAFA;AAGA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,IADA;AAEA,MAAA,YAAA,EAAA,KAFA;AAGA,MAAA,SAAA,EAAA;AACA,QAAA,QAAA,EAAA,IADA;AAEA,QAAA,SAAA,EAAA,IAFA;AAGA,QAAA,KAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,KAHA;AAIA,QAAA,IAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAJA;AAKA,QAAA,EAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA;AALA;AAHA,KAAA;AAWA,GAfA;AAgBA,EAAA,OAAA,EAAA,mBAAA,CAAA,CAhBA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,SAAA,EAAA,qBAAA;AACA,UAAA,KAAA,SAAA,CAAA,QAAA,IAAA,KAAA,SAAA,CAAA,SAAA,EAAA;AACA,aAAA,KAAA,GAAA,wBAAA;AACA,OAFA,MAEA;AACA,YAAA,IAAA,GAAA,IAAA;AACA,QAAA,KAAA,CACA,IADA,CACA,YADA,EACA,KAAA,SADA,EAEA,IAFA,CAEA,UAAA,IAAA,EAAA;AACA,cAAA,IAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AACA,YAAA,IAAA,CAAA,YAAA,GAAA,IAAA;AACA,WAFA,MAEA;AACA,YAAA,IAAA,CAAA,KAAA,GAAA,IAAA,CAAA,IAAA,CAAA,KAAA;AACA;AACA,SARA,EASA,KATA,CASA,UAAA,GAAA;AAAA,iBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,SATA;AAUA;AACA;AAjBA,GAjBA;AAoCA,EAAA,OAAA,EAAA,mBAAA;AACA,SAAA,SAAA,CAAA,YAAA;AAAA;;AACA,UAAA,KAAA,YAAA,EAAA;AACA,QAAA,UAAA,CAAA;AAAA,iBAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AAAA,SAAA,EAAA,IAAA,CAAA;AACA;AACA,KAJA;AAKA;AA1CA,CAAA","sourcesContent":["<template>\n  <div class=\"hello\">\n    <div v-if=\"resetSuccess\">\n      <p>Your password has been reset</p>\n    </div>\n    <div v-if=\"error\">{{ error }}</div>\n    <form v-on:submit.prevent=\"resetPass\">\n      <input\n        type=\"password\"\n        name=\"password\"\n        required\n        v-model=\"resetForm.password\"\n      />\n      <input\n        type=\"password\"\n        name=\"password2\"\n        required\n        v-model=\"resetForm.password2\"\n      />\n      <button type=\"submit\">Reset Password</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from \"@/axios\";\n\nexport default {\n  name: \"ResetPass\",\n  props: {},\n  data: function() {\n    return {\n      error: null,\n      resetSuccess: false,\n      resetForm: {\n        password: null,\n        password2: null,\n        email: this.$route.query.email,\n        hash: this.$route.query.hash,\n        iv: this.$route.query.iv\n      }\n    };\n  },\n  mounted: function() {},\n  methods: {\n    resetPass: function() {\n      if (this.resetForm.password != this.resetForm.password2) {\n        this.error = \"Passwords to not match\";\n      } else {\n        var self = this;\n        axios\n          .post(\"/resetPass\", this.resetForm)\n          .then(function(resp) {\n            if (resp.data.success) {\n              self.resetSuccess = true;\n            } else {\n              self.error = resp.data.error;\n            }\n          })\n          .catch(err => console.log(err));\n      }\n    }\n  },\n  updated: function() {\n    this.$nextTick(function() {\n      if (this.resetSuccess) {\n        setTimeout(() => this.$router.push(\"/\"), 4000);\n      }\n    });\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"],"sourceRoot":"src/components/auth"}]}